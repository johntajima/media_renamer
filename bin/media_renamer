#!/usr/bin/env ruby

$LOAD_PATH.unshift File.dirname(__FILE__)

require 'rubygems'
require 'thor'
require_relative '../lib/media_renamer'

class MediaRenamerCLI < Thor

  desc "rename <file|path>", "Renames media files found in path or given file"
  method_option :force, 
                aliases: '-f', 
                default: false,
                type: :boolean,
                desc: "Force renaming, without prompting for confirmation"
  method_option :preview, 
                aliases: '-p', 
                default: false,
                type: :boolean,
                desc: "Only previews the changes that would be made, does not make changes."
  method_option :target_dir, 
                aliases: '-d', 
                desc: "Specify target root directory to save renamed files in"
  # default action
  # rename <path|file>
  # renames all files in a given path, or a file

  def rename(path_or_file)
    options = {}
    renamer = MediaRenamer::Renamer.new(path_or_file, options)
    renamer.process!
  end

  # go through all files and print out media info about each file

  desc "Scan <file|path>", "Renames media files found in path or given file"
  def scan(path)
    options = {}
    files = Dir.glob(File.expand_path(File.join(path, "**/*")))
    audio_codecs = []
    video_codecs = []
    files.each do |f|
      m = MediaRenamer::Mediafile.new(f)
      next unless m.video?
      next if m.title.blank?

      movies = MediaRenamer::Agents::TmdbAgent.search(m.title, year: m.year)
      p movies.first

    end
  end
end


MediaRenamerCLI.start